<Page x:Class="Trebuchet.Views.MainPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:Behaviors="using:Template10.Behaviors"
      xmlns:Core="using:Microsoft.Xaml.Interactions.Core"
      xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
      xmlns:controls="using:Template10.Controls"
      xmlns:converters="using:Template10.Converters" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:local="using:Trebuchet.Views"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:vm="using:Trebuchet.ViewModels"
      xmlns:TrebControls="using:Trebuchet.Controls"  
      xmlns:TrebConverters="using:Trebuchet.Converters" 
      mc:Ignorable="d">

    <Page.DataContext>
        <vm:MainPageViewModel x:Name="ViewModel" />
    </Page.DataContext>

    <Page.Resources>
        <converters:ValueWhenConverter x:Key="VisibleWhenTrueConverter">
            <converters:ValueWhenConverter.When>
                <x:Boolean>True</x:Boolean>
            </converters:ValueWhenConverter.When>
            <converters:ValueWhenConverter.Value>
                <Visibility>Visible</Visibility>
            </converters:ValueWhenConverter.Value>
            <converters:ValueWhenConverter.Otherwise>
                <Visibility>Collapsed</Visibility>
            </converters:ValueWhenConverter.Otherwise>
        </converters:ValueWhenConverter>

        <TrebConverters:StringToColorConverter x:Key="StringToColorConverter"></TrebConverters:StringToColorConverter>

        <converters:ChangeTypeConverter x:Key="TypeConverter"/>
    </Page.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="50"></RowDefinition>
            <RowDefinition Height="1*"></RowDefinition>
        </Grid.RowDefinitions>
        <Grid Name="HeaderRow" Grid.Row="0">
            <controls:PageHeader x:Name="pageHeader" RelativePanel.AlignLeftWithPanel="True"                             
                             Text="Main Page">
                <!--  secondary commands  -->
                <controls:PageHeader.SecondaryCommands>
                    <AppBarButton Click="{x:Bind ViewModel.GotoSettings}" Label="Settings" />
                    <AppBarButton Click="{x:Bind ViewModel.GotoPrivacy}" Label="Privacy" />
                    <AppBarButton Click="{x:Bind ViewModel.GotoAbout}" Label="About" />
                </controls:PageHeader.SecondaryCommands>
            </controls:PageHeader>
        </Grid>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" MinWidth="100"></ColumnDefinition>
                <ColumnDefinition Width="300"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Grid Name="ContentRow" Grid.Row="1" Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="1*"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="1*"></RowDefinition>
            </Grid.RowDefinitions>
            <!-- Video Grid -->
            <Grid Name="VideoRow" Grid.Row="0">
                <!-- IP Address-->

                <Grid.RowDefinitions>
                    <RowDefinition Height="125"></RowDefinition>
                    <RowDefinition Height="1*"></RowDefinition>
                </Grid.RowDefinitions>
                <Grid Grid.Row="0" Name="VideoHeader">
                    <StackPanel >
                        <TextBlock Text="Description:" />
                        <TextBlock x:Name="IPAddress" Text="IP Address:"/>
                        <TextBlock Grid.ColumnSpan="3" Grid.Row="0" VerticalAlignment="Center">Enter IP address or hostname of remote PC:</TextBlock>
                        <StackPanel Margin="0,10,0,0" Grid.Row="0">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <TextBox Grid.Column="0" Grid.Row="1" x:Name="HostNameTextbox" Text="{Binding RemoteAddress, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <Button Grid.Column="1" Grid.Row="1" x:Name="CallButton" Content="Call" Margin="0,0,0,0" Click="CallButton_Click" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                                <Button Grid.Column="2" Grid.Row="1" x:Name="EndCallButton" Content="End Call" Margin="0,0,0,0" Click="EndCallButton_Click" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                            </Grid>
                        </StackPanel>
                    </StackPanel>
                </Grid>
                <Grid Grid.Row="1" Name="VideoContent">
                    <Border x:Name="RemoteVideoBorder" BorderBrush="Gray" BorderThickness="1">
                        <MediaElement x:Name="RemoteVideo" AudioCategory="Communications"   PosterSource="ms-appx:///Assets/video-call-poster.png"  />
                    </Border>

                </Grid>
            </Grid>
            </Grid>
            <Grid Grid.Column="1">
                <Border  BorderThickness="3" BorderBrush="{StaticResource CustomColorBrush}" Margin="3,3,3,3">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="60"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <!-- Region Item Template Control -->
                        <ItemsControl Grid.Row="0" ItemsSource="{x:Bind ViewModel.FlipViewViewModels}" HorizontalAlignment="Center" VerticalAlignment="Bottom" >
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate x:DataType="vm:MainPageFlipViewViewModel">
                                    <Button Style="{StaticResource TextBlockButtonStyle}" 
                                        CommandParameter="{x:Bind}"
                                        Command="{x:Bind SelectCommand, Mode=OneWay}">
                                        <Grid Height="30" Width="30" Margin="10,10">
                                            <Ellipse Fill="Gray" RenderTransformOrigin="0.5,0.5" Visibility="{x:Bind Selected, Converter={StaticResource VisibleWhenTrueConverter}, Mode=OneWay}" >
                                                <Ellipse.RenderTransform>
                                                    <CompositeTransform ScaleX="1.25" ScaleY="1.25"/>
                                                </Ellipse.RenderTransform>
                                            </Ellipse>
                                            <Ellipse Fill="{x:Bind ColorPanelHighlight, Converter={StaticResource StringToColorConverter},Mode=OneWay}" Stroke="Gray" />
                                        </Grid>
                                    </Button>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                        <!-- EndRegion -->
                        <ScrollViewer Grid.Row="1">
                            <FlipView  ItemsSource="{x:Bind ViewModel.FlipViewViewModels}" 
                                       SelectedItem="{x:Bind ViewModel.SelectedFlipViewItem, Mode=TwoWay, Converter={StaticResource TypeConverter}}" >
                                <FlipView.ItemTemplate>
                                    <DataTemplate x:DataType="vm:MainPageFlipViewViewModel">                                     
                                        <StackPanel Orientation="Vertical" Background="White">
                                            <TrebControls:PiControler 
                                                BrushPanel="{x:Bind ColorPanelHighlight, Converter={StaticResource StringToColorConverter},Mode=OneWay}"
                                                BrushRightLightFill ="{x:Bind ColorLedLightRight, Converter={StaticResource StringToColorConverter},Mode=OneWay}"
                                                BrushRightLightStroke="{x:Bind ColorLedStrokeRight, Converter={StaticResource StringToColorConverter},Mode=OneWay}"
                                                BrushLeftLightFill ="{x:Bind ColorLedLightLeft, Converter={StaticResource StringToColorConverter},Mode=OneWay}"
                                                BrushLeftLightStroke="{x:Bind ColorLedStrokeLeft, Converter={StaticResource StringToColorConverter},Mode=OneWay}">                                                
                                            </TrebControls:PiControler>
                                        </StackPanel>
                                    </DataTemplate>
                                </FlipView.ItemTemplate>
                            </FlipView>
                        </ScrollViewer> 
                    </Grid>
                </Border>
            </Grid>
        </Grid>
    </Grid>
</Page>

